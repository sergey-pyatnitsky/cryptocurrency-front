# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [19.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build
  push_to_Docker_Hub:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: checkout repo
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Retag to latest
        uses: tinact/docker.image-retag@1.0.3
        with:
          image_name: neaktub/cryptocurrency-front
          image_old_tag: latest
          image_new_tag: 0.0.${{ secrets.MINOR }}
          registry_username: ${{ secrets.USERNAME }}
          registry_password: ${{ secrets.DOCKERHUB_TOKEN }}
    
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.REACTUSERNAME }}/cryptocurrency-front:latest
          
      - name: Update Minor version
        uses: hmanzur/actions-set-secret@v2.0.0
        with:
          name: 'MINOR'
          value: $((${{ secrets.MINOR }}+1))
          repository: sergey-pyatnitsky/cryptocurrency-front
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
